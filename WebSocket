#!/usr/bin/env php
<?php

require(__DIR__ . '/Colors.php');

class WebSocket
{
    /**
     * @var $application
     * @var $runTimePath
     */
    public static $application;
    public $runTimePath;
    public $colors;


    /**
     * 检测并创建项目运行时目录
     * @return bool
     */
    private function initRuntime()
    {
        $result = true;
        $this->runTimePath = dir(__DIR__)->path.'/socketService/runtime/logs/swoole';

        if(!is_dir($this->runTimePath))
        {
            if (mkdir($this->runTimePath,0755))
            {
                $result = false;
            }
        }

        return $result;
    }

    /**
     * WebSocket constructor.
     */
    public function __construct()
    {
        $this->initRuntime();
        $this->colors = new Colors();

        // init swoole_websocket_server
        $socket = new swoole_websocket_server("0.0.0.0", 9501);
        $socket->set([
            'worker_num'      => 4,
            'daemonize'       => false,
            'max_request'     => 10000,
            'debug_mode'      => 1,
//            'task_worker_num' => 4,
            'dispatch_mode'   => 2,
            'log_file'        => $this->runTimePath."/swoole.log",
        ]);

        // bind callback
        $socket->on('Start',        [$this, 'onStart']);
        $socket->on('ManagerStart', [$this, 'onManagerStart']);
        $socket->on('WorkerStart',  [$this, 'onWorkerStart']);
        $socket->on('Connect',      [$this, 'onConnect']);
        $socket->on('Message',      [$this, 'onMessage']);
        $socket->on('Close',        [$this, 'onClose']);

        $socket->start();
    }

    /**
     * @param swoole_websocket_server $server
     */
    public function onStart($server)
    {
        swoole_set_process_name('WebSocketMaster');
        $cliNotice = "[ PID : $server->master_pid ] ----> SOCKET Server Start , Active master process ... \r\n";
        echo $this->colors->getColoredString($cliNotice,'red');
    }

    public function onManagerStart($server)
    {
        swoole_set_process_name('WebSocketManager');
        $cliNotice = "[ PID : $server->manager_pid ] ----> Active manage process ... \r\n";
        echo $this->colors->getColoredString($cliNotice,'red');
    }

    public function onWorkerStart($server,$worker_id)
    {
        swoole_set_process_name('WebSocketWorker');
        $cliNotice = "[ PID : $worker_id ] ----> initialize worker process ... \r\n";
        echo $this->colors->getColoredString($cliNotice,'green');
    }

    public function onConnect($server,$fd,$from_id)
    {
        $cliNotice = "[ ReactorID : $from_id ] ----> Client $fd Has been connected ... \r\n";
        echo $this->colors->getColoredString($cliNotice,'green');
    }

    /**
     * 接受消息回调
     * @param swoole_websocket_server $server
     * @param swoole_websocket_frame $frame
     */
    public function onMessage(swoole_websocket_server $server, swoole_websocket_frame $frame)
    {
        echo $frame->data;
        $server->push($frame->fd,$frame->data);
    }

    public function onClose(swoole_websocket_server $server,$fd,$reactorId)
    {

    }

    /**
     * 运行程序
     * @return WebSocket
     */
    public static function run()
    {
        if (!self::$application) {
            self::$application = new WebSocket();
        }
        return self::$application;
    }
}

WebSocket::run();